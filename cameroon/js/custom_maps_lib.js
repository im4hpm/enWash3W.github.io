



   MapsLib.prototype.submitSearch = function (whereClause, map) {
        var self = this;
        //get using all filters
        //NOTE: styleId and templateId are recently added attributes to load custom marker styles and info windows
        //you can find your Ids inside the link generated by the 'Publish' option in Fusion Tables
        //for more details, see https://developers.google.com/fusiontables/docs/v1/using#WorkingStyles
        self.searchrecords = new google.maps.FusionTablesLayer({
            query: {
                from: self.fusionTableId,
                select: self.locationColumn,
                where: whereClause
            },
            styleId: 2,
            templateId: 2
        });
        self.fusionTable = self.searchrecords;
        self.searchrecords.setMap(map);
        self.getCount(whereClause);
    };
	
	
	 MapsLib.prototype.doSearch = function () {
        var self = this;
       // self.clearSearch();
       // var address = $("#search_address").val();
       // self.searchRadius = $("#search_radius").val();
        self.whereClause = self.locationColumn + " not equal to ''";
        
        //-----custom filters-----
		
		//get the list of elements
			var org_list_items=$("#listeOrg").find(".checkbox");
			var type_column = colfilter_1 ;
			var searchType = type_column + " IN (-1,";
			var tempWhereClause = [];
			var itemSelect;
			for (var i = 0; i < org_list_items.length; i++){
				//if (org_list_items[i].getAttribute(attribute) == value) { return org_list_items[i]; }
				itemSelect=org_list_items[i].attr("id");
				if ((org_list_items[i].is(':checked')) tempWhereClause.push(itemSelect); 	
			}
			
			//if ( $("#ACF").is(':checked')) searchType +=  "1,";
			//if ( $("#cbType2").is(':checked')) searchType += "2,";
			//if ( $("#cbType3").is(':checked')) searchType += "3,";
			//self.whereClause += " AND " + searchType.slice(0, searchType.length - 1) + ")";
			self.whereClause += " AND " + type_column + " IN ('" + tempWhereClause.join("','") + "')";
			
        //-----end of custom filters-----
		
		 if (address != "") {
			}
		else { //search without geocoding callback
			MapsLib.submitSearch(whereClause, map);
		};

    };
	
	// arguments: reference to select list, callback function (optional)
	function getSelectedOptions(sel, fn) {
		var opts = [], opt;
		
		// loop through options in select list
		for (var i=0, len=sel.options.length; i<len; i++) {
			opt = sel.options[i];
			
			// check if selected
			if ( opt.selected ) {
				// add to array of option elements to return from this function
				opts.push(opt);
				
				// invoke optional callback function if provided
				if (fn) {
					fn(opt);
				}
			}
		}
		
		// return array containing references to selected option elements
		return opts;
	}